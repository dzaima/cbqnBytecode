B iarrs[28];
static const i32 iarrs_data[] = {
 // 0
1, // 1
3, // 2
5, // 3
6, // 4
7, // 5
9, // 6
10, // 7
0,2, // 8
18,42, // 9
895,2, // 10
995,7, // 11
1174,5, // 12
1256,11, // 13
1373,4, // 14
1404,7, // 15
1491,3, // 16
1528,6, // 17
1584,3, // 18
1628,3, // 19
1661,3, // 20
0,1,0, // 21
0,1,2, // 22
0,0,4, // 23
0,0,8, // 24
0,0,11, // 25
0,0,12, // 26
0,54,0,54,11,2,33,0,0,48,6,1,1,33,0,1,48,7,34,0,2,33,0,3,33,0,4,33,0,5,33,0,6,33,0,7,33,0,8,12,2,33,0,9,12,6,48,6,0,63,0,64,0,65,0,66,0,67,11,5,0,38,0,1,26,0,59,17,0,21,0,48,0,54,27,0,40,0,27,26,0,29,21,16,33,0,10,33,0,11,33,0,12,33,0,13,12,4,48,6,1,2,33,0,14,48,6,32,0,3,34,0,7,11,2,0,40,0,27,0,48,32,0,14,27,26,16,0,40,0,21,26,0,56,0,55,11,2,17,33,0,15,33,0,16,12,2,48,6,34,0,11,0,29,32,0,15,17,33,0,17,48,0,13,0,55,17,33,0,18,48,6,34,0,14,0,27,16,0,38,0,27,0,48,32,0,18,27,0,50,0,15,0,0,0,54,21,0,38,0,29,26,32,0,3,21,27,26,33,0,17,50,6,34,0,12,0,29,32,0,15,17,0,30,0,48,0,55,27,0,50,0,54,27,16,33,0,19,48,6,32,0,17,0,1,32,0,19,17,0,45,0,0,26,16,33,0,20,48,6,32,0,20,0,30,0,55,17,0,13,0,54,17,0,36,16,6,32,0,17,0,10,0,56,17,33,0,21,48,0,2,0,48,0,2,0,48,32,0,19,27,0,45,0,0,26,20,27,16,33,0,22,48,6,34,0,19,0,7,34,0,17,17,0,27,16,0,29,0,48,0,32,0,0,32,0,20,0,49,0,29,27,21,0,28,0,47,0,29,0,48,0,28,27,27,34,0,20,0,21,0,55,17,21,27,16,33,0,23,48,6,34,0,21,0,7,16,0,20,0,48,0,12,27,32,0,23,17,33,0,24,48,6,32,0,1,1,3,34,0,9,17,33,0,25,33,0,26,33,0,27,33,0,28,12,4,48,6,32,0,23,1,4,16,0,12,0,53,0,38,0,29,26,27,16,0,38,0,29,26,32,0,28,0,29,32,0,24,0,45,0,0,26,16,0,38,0,1,26,0,54,17,17,17,0,21,0,55,17,33,0,29,48,6,0,55,0,18,32,0,29,17,33,0,30,48,6,32,0,23,0,15,0,19,0,29,21,34,0,18,0,1,32,0,30,17,0,29,32,0,23,17,0,12,34,0,29,17,0,14,32,0,24,17,0,27,16,17,33,0,31,48,6,32,0,22,0,19,34,0,30,17,0,2,32,1,0,17,0,26,16,0,29,34,0,31,17,0,44,0,38,0,39,0,38,0,10,0,47,0,18,0,46,0,25,27,27,26,26,26,26,16,0,0,0,54,17,0,40,0,4,26,16,33,0,32,48,6,0,54,0,56,11,2,0,0,34,0,1,0,12,16,32,0,22,0,43,0,5,26,16,0,0,0,54,17,11,2,17,0,2,32,1,0,17,33,0,33,48,6,1,5,33,0,34,48,6,1,6,33,0,35,48,6,1,7,33,0,36,48,6,0,69,33,0,37,48,6,34,0,22,0,29,34,0,23,0,27,32,0,24,17,17,0,40,0,19,0,2,32,1,0,21,0,0,0,54,0,56,11,2,21,26,34,0,28,17,0,5,16,0,54,0,52,0,25,27,16,33,0,38,48,6,34,0,32,0,39,0,10,26,16,0,40,34,0,34,26,16,0,54,0,52,0,25,27,16,33,0,39,48,6,34,0,39,0,40,1,8,26,16,33,0,40,48,6,34,0,40,0,40,34,0,35,26,16,0,43,0,9,26,16,0,43,0,2,0,48,0,58,27,0,49,0,0,27,26,16,0,38,0,29,26,34,0,37,17,0,21,0,54,17,33,0,41,48,6,34,0,27,0,19,34,0,38,17,0,26,16,0,39,0,43,1,9,26,26,16,6,0,29,0,50,0,40,0,16,0,62,11,2,0,51,0,61,0,49,0,13,27,27,26,27,33,0,41,51,6,0,70,34,0,25,0,70,11,3,0,18,16,32,0,41,11,2,0,18,16,0,39,0,10,26,16,7,32,1,3,0,16,0,2,0,11,0,48,0,12,27,21,0,38,0,29,26,0,15,21,32,1,10,17,0,0,0,54,17,0,0,32,1,3,0,12,16,0,22,16,17,33,0,0,48,6,0,37,0,56,11,1,26,1,10,0,12,0,49,0,18,27,21,0,16,0,27,0,11,21,0,12,21,33,0,1,48,6,34,0,0,34,0,1,0,42,0,27,26,20,0,20,0,12,21,16,7,34,0,2,44,44,44,33,0,3,33,0,4,12,5,48,6,0,57,0,0,0,60,17,0,13,32,0,1,17,0,27,16,33,0,5,48,6,32,0,1,0,29,0,48,32,0,5,27,0,50,0,68,0,29,32,0,3,0,33,34,0,5,17,17,27,16,33,0,1,49,6,32,1,16,0,27,32,1,24,17,0,31,32,0,3,17,33,0,6,48,6,32,0,1,32,0,4,0,0,0,54,17,0,42,0,27,26,0,20,32,0,1,0,12,16,21,0,45,0,0,26,20,0,47,0,11,0,2,0,15,21,27,32,0,3,17,0,38,0,1,26,0,54,17,0,38,0,35,26,34,0,1,17,32,0,6,0,58,0,3,34,0,4,0,0,34,0,3,17,17,0,29,34,0,6,17,11,4,7,32,0,1,0,28,16,33,0,3,48,0,38,0,29,26,34,0,1,17,33,0,4,48,6,32,1,15,0,12,16,0,22,16,0,29,0,48,32,0,4,0,34,16,27,0,50,32,1,13,0,29,32,1,15,17,0,29,32,0,4,17,0,13,34,0,4,0,32,16,17,0,38,0,27,26,34,0,3,17,27,16,7,32,0,1,33,0,3,33,0,4,12,2,33,0,5,33,0,6,12,2,12,2,47,1,11,33,0,7,48,6,32,0,5,32,0,7,32,0,3,17,33,0,8,48,6,34,0,6,34,0,7,34,0,4,17,33,0,9,48,6,34,0,5,0,11,34,0,3,17,0,2,0,55,17,33,0,10,48,6,32,0,9,0,41,0,18,26,32,0,8,0,30,34,0,10,17,17,0,18,34,0,9,0,30,0,55,17,0,41,0,18,26,34,0,8,17,17,7,32,0,1,33,0,3,48,6,0,23,0,39,0,23,26,0,24,0,39,0,24,26,11,4,0,40,1,12,26,16,7,32,0,1,33,0,3,48,6,32,0,2,33,0,4,33,0,5,12,2,47,32,0,4,0,12,16,0,38,0,3,26,0,58,17,0,4,16,0,1,34,0,5,17,33,0,6,48,6,32,0,3,0,20,32,0,6,17,32,0,4,34,0,4,0,12,16,0,0,34,0,6,17,0,38,0,21,26,34,0,3,17,11,3,0,18,16,7,32,1,33,0,25,16,0,0,0,54,17,0,38,0,17,26,0,56,17,0,30,0,48,34,0,1,27,0,50,0,40,0,54,26,27,16,7,32,0,1,33,0,3,48,6,32,0,2,33,0,4,33,0,5,12,2,47,0,29,0,48,34,0,4,27,0,50,32,1,36,0,48,32,1,26,0,30,34,0,3,17,34,0,5,11,2,27,27,33,1,41,51,7,32,0,2,0,29,32,0,1,17,0,18,34,0,1,17,0,30,0,48,0,55,27,0,47,0,12,27,0,53,34,0,0,27,34,0,2,0,38,0,29,26,16,17,7,32,0,1,0,1,32,0,2,19,0,6,16,0,0,0,54,17,0,22,16,0,0,34,0,1,0,4,34,0,2,19,17,7,32,1,3,34,0,1,16,0,8,32,1,3,17,7, // 27
};
static const u32 iarrs_lens[] = {0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,1675};
init_intarrs(iarrs, iarrs_data, iarrs_lens, 28);
B iarrs0 = iarrs[0];
incByG(iarrs[0], 6);

B a0; B* a0p = m_lvBn(&a0, 71);
assume_separate_storage(a0p, iarrs);
a0p[0] = incG(runtime[0]);
a0p[1] = incG(runtime[1]);
a0p[2] = incG(runtime[2]);
a0p[3] = incG(runtime[3]);
a0p[4] = incG(runtime[6]);
a0p[5] = incG(runtime[7]);
a0p[6] = incG(runtime[8]);
a0p[7] = incG(runtime[9]);
a0p[8] = incG(runtime[10]);
a0p[9] = incG(runtime[11]);
a0p[10] = incG(runtime[12]);
a0p[11] = incG(runtime[13]);
a0p[12] = incG(runtime[14]);
a0p[13] = incG(runtime[15]);
a0p[14] = incG(runtime[16]);
a0p[15] = incG(runtime[20]);
a0p[16] = incG(runtime[21]);
a0p[17] = incG(runtime[22]);
a0p[18] = incG(runtime[23]);
a0p[19] = incG(runtime[24]);
a0p[20] = incG(runtime[26]);
a0p[21] = incG(runtime[27]);
a0p[22] = incG(runtime[28]);
a0p[23] = incG(runtime[29]);
a0p[24] = incG(runtime[30]);
a0p[25] = incG(runtime[31]);
a0p[26] = incG(runtime[32]);
a0p[27] = incG(runtime[33]);
a0p[28] = incG(runtime[34]);
a0p[29] = incG(runtime[36]);
a0p[30] = incG(runtime[37]);
a0p[31] = incG(runtime[38]);
a0p[32] = incG(runtime[39]);
a0p[33] = incG(runtime[40]);
a0p[34] = incG(runtime[41]);
a0p[35] = incG(runtime[42]);
a0p[36] = incG(runtime[43]);
a0p[37] = incG(runtime[44]);
a0p[38] = incG(runtime[45]);
a0p[39] = incG(runtime[46]);
a0p[40] = incG(runtime[47]);
a0p[41] = incG(runtime[48]);
a0p[42] = incG(runtime[49]);
a0p[43] = incG(runtime[50]);
a0p[44] = incG(runtime[51]);
a0p[45] = incG(runtime[52]);
a0p[46] = incG(runtime[53]);
a0p[47] = incG(runtime[54]);
a0p[48] = incG(runtime[55]);
a0p[49] = incG(runtime[56]);
a0p[50] = incG(runtime[57]);
a0p[51] = incG(runtime[59]);
a0p[52] = incG(runtime[61]);
a0p[53] = incG(runtime[62]);
a0p[54] = m_f64(1);
a0p[55] = m_f64(-1);
a0p[56] = m_f64(0);
a0p[57] = m_f64(10);
a0p[58] = m_f64(2);
a0p[59] = m_c32(U'0');
a0p[60] = m_c32(U'\0');
a0p[61] = m_c32(U'╷');
a0p[62] = m_c32(U'│');
a0p[63] = m_c8vec("11411311121111111315114131131111=111",36);
a0p[64] = m_c8vec("111000111100000000002221100000000111",36);
a0p[65] = m_c8vec("000111////23232303230000011022232111",36);
a0p[66] = m_c8vec("111000111111111101111111101101111111",36);
a0p[67] = m_c8vec("000000000011111101010000000000010000",36);
a0p[68] = m_c32vec(U" ⋄",2);
a0p[69] = m_c32vec(U" ╷╶┌╵│└├╴┐─┬┘┤┴┼",16);
a0p[70] = m_c8vec(" ",1);

B a1; B* a1p = m_lvBn(&a1, 13);
assume_separate_storage(a1p, iarrs);
a1p[0] = iarrs[21];
a1p[2] = iarrs[22];
a1p[4] = iarrs[23];
a1p[8] = iarrs[24];
a1p[11] = iarrs[25];
a1p[12] = iarrs[26];
a1p[1] = m_blockinfo(0, iarrs0, iarrs[1]);
a1p[3] = m_blockinfo(0, iarrs0, iarrs[2]);
a1p[5] = m_blockinfo(0, iarrs[3], iarrs0);
a1p[6] = m_blockinfo(0, iarrs[4], iarrs0);
a1p[7] = m_blockinfo(0, iarrs0, iarrs[5]);
a1p[9] = m_blockinfo(0, iarrs0, iarrs[6]);
a1p[10] = m_blockinfo(0, iarrs0, iarrs[7]);

B a2; B* a2p = m_lvBn(&a2, 13);
assume_separate_storage(a2p, iarrs);
a2p[0] = iarrs[8];
a2p[1] = iarrs[9];
a2p[2] = iarrs[10];
a2p[3] = iarrs[11];
a2p[4] = iarrs[12];
a2p[5] = iarrs[13];
a2p[6] = iarrs[14];
a2p[7] = iarrs[15];
a2p[8] = iarrs[16];
a2p[9] = iarrs[17];
a2p[10] = iarrs[18];
a2p[11] = iarrs[19];
a2p[12] = iarrs[20];
load_importBlock("(explain)",
  iarrs[27],
  a0,
  a1,
  a2
);
